name: Deploy preview to GitHub Pages

on:
  push:
    branches:
      - main
      - preview-*
      - content-refresh-*
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      # REQUIRED by GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # ---------- PRODUCTION (main) ----------
      - name: Prepare production artifact (no rewrite, ensure CNAME)
        if: github.ref == 'refs/heads/main'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $src = "site"
          if (-not (Test-Path $src)) { throw "Expected '$src' folder with your static site." }

          # If CNAME is at repo root, copy it into the site/ artifact.
          # If it's already inside site/CNAME, this will just overwrite with same content.
          $candidates = @("CNAME","site/CNAME")
          foreach($c in $candidates){
            if(Test-Path $c){
              Copy-Item $c "$src/CNAME" -Force
              break
            }
          }

      - name: Upload artifact (main)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      # ---------- PREVIEW (non-main) ----------
      - name: Prepare preview artifact (rewrite root-absolute paths)
        if: github.ref != 'refs/heads/main'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $src = "site"
          if (-not (Test-Path $src)) { throw "Expected '$src' folder with your static site." }
          $dst = "site-preview"
          if (Test-Path $dst) { Remove-Item -Recurse -Force $dst }
          Copy-Item $src $dst -Recurse -Force

          $slug = "${{ github.event.repository.name }}"
          Get-ChildItem $dst -Recurse -Include *.html,*.htm,*.css,*.js | ForEach-Object {
            $p = $_.FullName
            $t = Get-Content -Raw -LiteralPath $p
            $t = $t -replace 'href="/',  ('href="/'  + $slug + '/')
            $t = $t -replace 'src="/',   ('src="/'   + $slug + '/')
            $t = $t -replace 'url\("/',  ('url("/'   + $slug + '/')
            $t = $t -replace "url\('/",  ("url(''/"  + $slug + '/')
            $t = $t -replace 'url\(/',   ('url(/'    + $slug + '/')
            Set-Content -LiteralPath $p -Value $t -Encoding utf8
          }

          # Make sure previews NEVER carry a CNAME
          if (Test-Path "$dst/CNAME") { Remove-Item "$dst/CNAME" -Force }

      - name: Upload artifact (preview)
        if: github.ref != 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: site-preview

      # ---------- DEPLOY ----------
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
